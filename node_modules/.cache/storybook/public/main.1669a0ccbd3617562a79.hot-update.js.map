{"version":3,"file":"main.1669a0ccbd3617562a79.hot-update.js","sources":["webpack:///./src/components/Requirement/Requirement.js","webpack:///./src/components/Requirement/index.js","webpack:///./src/components/Requirements/Requirements.jsx","webpack:///./src/components/Xmark/Xmark.js","webpack:///./src/components/Xmark/index.js"],"sourcesContent":["import { Xmark } from \"../Xmark\";\nimport { Checkmark } from \"../Checkmark\";\nimport React, { useEffect, useState } from \"react\";\n\nexport const Requirement = ({ value, requirement }) => {\n  const [isValid, setIsValid] = useState();\n\n  useEffect(() => {\n    setIsValid(requirement.validator(value));\n  }, [value, requirement]);\n\n  return (\n    <div className='requirement'>\n      {isValid ? <Checkmark /> : <Xmark />}\n      \n      <p className={isValid ? 'valid' : 'invalid'}>\n        {requirement.text}\n      </p>\n    </div>\n  );\n};","export * from './Requirement';","import '../../styles.css';\nimport { Requirement } from '../Requirement';\nimport React, { useCallback, useEffect } from 'react';\n\nexport const Requirements = ({\n    value,\n    requirements,\n    onValidChange,\n  }) => {\n  const validChangeCb = useCallback(onValidChange, []);\n\n  useEffect(() => {\n    validChangeCb(\n      requirements.every(r => r.validator(value))\n    );\n  }, [value, requirements, validChangeCb]);\n\n  return requirements.map((r, index) => (\n    <Requirement\n      key={index}\n      value={value}\n      requirement={r}\n      onValidChange={onValidChange}\n    />\n  ));\n};","import React from \"react\";\n\nexport const Xmark = () => {\n  return (\n    <svg \n      x=\"0px\"\n      y=\"0px\" \n      width=\"15px\" \n      height=\"15px\" \n      viewBox=\"0 0 122.879 122.879\" \n      enableBackground=\"new 0 0 122.879 122.879\">\n        <g>\n          <path \n            fillRule=\"evenodd\" \n            clipRule=\"evenodd\" \n            fill=\"#FF4141\"\n            d=\"M61.44,0c33.933,0,61.439,27.507,61.439,61.439 s-27.506,61.439-61.439,61.439C27.507,122.879,0,95.372,0,61.439S27.507,0,61.44,0L61.44,0z M73.451,39.151 c2.75-2.793,7.221-2.805,9.986-0.027c2.764,2.776,2.775,7.292,0.027,10.083L71.4,61.445l12.076,12.249 c2.729,2.77,2.689,7.257-0.08,10.022c-2.773,2.765-7.23,2.758-9.955-0.013L61.446,71.54L49.428,83.728 c-2.75,2.793-7.22,2.805-9.986,0.027c-2.763-2.776-2.776-7.293-0.027-10.084L51.48,61.434L39.403,49.185 c-2.728-2.769-2.689-7.256,0.082-10.022c2.772-2.765,7.229-2.758,9.953,0.013l11.997,12.165L73.451,39.151L73.451,39.151z\"/>\n        </g>\n    </svg>\n  );\n};","export * from './Xmark';"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AAGA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACJA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAAA;AAEA;AAIA;AAFA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACFA;AAAA;AAAA;;;;;A","sourceRoot":""}